{
  "primitives": [
    "mlstars.custom.timeseries_preprocessing.time_segments_aggregate",
    "sklearn.preprocessing.MinMaxScaler",
    "mlstars.custom.timeseries_preprocessing.rolling_window_sequences",
    "numpy.reshape",
    "custom.arima",
    "numpy.reshape",
    "orion.primitives.timeseries_errors.regression_errors",
    "custom.find_anomalies"
  ],
  "init_params": {
    "mlstars.custom.timeseries_preprocessing.time_segments_aggregate#1": {
      "time_column": "timestamp",
      "interval": 21600,
      "method": "mean"
    },
    "sklearn.preprocessing.MinMaxScaler#1": {
      "feature_range": [
        -1,
        1
      ]
    },
    "mlstars.custom.timeseries_preprocessing.rolling_window_sequences#1": {
      "target_column": 0,
      "window_size": 250
    },
    "numpy.reshape#1": {
      "newshape": [
        -1,
        250
      ]
    },
    "custom.arima#1": {
      "steps": 1
    },
    "numpy.reshape#2": {
      "newshape": [
        -1,
        1
      ]
    },
    "custom.find_anomalies#1": {
      "fixed_threshold": false,
      "clustering": false
    }
  },
  "input_names": {
    "custom.find_anomalies#1": {
      "index": "target_index"
    },
    "numpy.reshape#1": {
      "y": "X"
    },
    "numpy.reshape#2": {
      "X": "y_hat"
    }
  },
  "output_names": {
    "custom.arima#1": {
      "y": "y_hat"
    },
    "numpy.reshape#1": {
      "y": "X"
    },
    "numpy.reshape#2": {
      "X": "y_hat"
    }
  }
}
